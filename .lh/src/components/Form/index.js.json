{
    "sourceFile": "src/components/Form/index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1629917712097,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1630432707424,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import { yupResolver } from '@hookform/resolvers/yup';\r\n \r\n import { schema } from './Schema'\r\n \r\n-import { Button, Container, Form, Input, Label, Section, Title } from './styles';\r\n+import { Button, Container, Form, Error, Input, Label, Section, Title } from './styles';\r\n \r\n function Former() {\r\n     const { register, handleSubmit, formState: { errors } } = useForm({\r\n         resolver: yupResolver(schema)\r\n@@ -17,29 +17,29 @@\n                 <Title>Formulário de Cadastro</Title>\r\n                 <Container>\r\n                     <Label>Nome</Label>\r\n                     <Input type='text' {...register(\"name\")} />\r\n-                    <p>{errors.name?.message}</p>\r\n+                    <Error>{errors.name?.message}</Error>\r\n                 </Container>\r\n                 <Container>\r\n                     <Label>Sobrenome</Label>\r\n                     <Input type='text' {...register(\"lastname\")} />\r\n-                    <p>{errors.lastname?.message}</p>\r\n+                    <Error>{errors.lastname?.message}</Error>\r\n                 </Container>\r\n                 <Container>\r\n                     <Label>E-mail</Label>\r\n                     <Input type='email' {...register(\"email\")} />\r\n-                    <p>{errors.email?.message}</p>\r\n+                    <Error>{errors.email?.message}</Error>\r\n                 </Container>\r\n                 <Container>\r\n                     <Label>Senha</Label>\r\n                     <Input type='password' {...register(\"password\")} />\r\n-                    <p>{errors.password?.message}</p>\r\n+                    <Error>{errors.password?.message}</Error>\r\n                 </Container>\r\n                 <Container>\r\n                     <Label>Confirmar Senha</Label>\r\n                     <Input type='password' {...register(\"confirmPassword\")} />\r\n-                    <p>{errors.confirmPassword?.message}</p>\r\n+                    <Error>{errors.confirmPassword?.message}</Error>\r\n                 </Container>\r\n                 <Button type='submit'>Enviar</Button>\r\n             </Form>\r\n         </Section>\r\n"
                },
                {
                    "date": 1634148927991,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import React from 'react';\r\n+import React, {useState} from 'react';\r\n import { useForm } from \"react-hook-form\";\r\n import { yupResolver } from '@hookform/resolvers/yup';\r\n \r\n import { schema } from './Schema'\r\n@@ -10,15 +10,22 @@\n     const { register, handleSubmit, formState: { errors } } = useForm({\r\n         resolver: yupResolver(schema)\r\n     });\r\n     const newUser = (user) => console.log(user);\r\n+\r\n+    const [cep, setCep] = useState('')\r\n+    async function GetCep (){\r\n+        const response = await fetch(`https://viacep.com.br/ws/${cep}/json/`)\r\n+        const data = await response.json()\r\n+        setCep(data)\r\n+    }\r\n     return (\r\n         <Section>\r\n             <Form onSubmit={handleSubmit(newUser)}>\r\n                 <Title>Formulário de Cadastro</Title>\r\n                 <Container>\r\n                     <Label>Nome</Label>\r\n-                    <Input type='text' {...register(\"name\")} />\r\n+                    <Input type='text' autoFocus {...register(\"name\")} />\r\n                     <Error>{errors.name?.message}</Error>\r\n                 </Container>\r\n                 <Container>\r\n                     <Label>Sobrenome</Label>\r\n@@ -30,10 +37,30 @@\n                     <Input type='email' {...register(\"email\")} />\r\n                     <Error>{errors.email?.message}</Error>\r\n                 </Container>\r\n                 <Container>\r\n+                    <Label>Cep</Label>\r\n+                    <Input type='text' onBlur={GetCep} onChange={(e) => setCep(e.target.value)} />                    \r\n+                </Container>\r\n+                <Container>\r\n+                    <Label>Cidade</Label>\r\n+                    <Input type='text' value={cep.localidade} {...register(\"Cidade\")} />            \r\n+                </Container>\r\n+                <Container>\r\n+                    <Label>UF</Label>\r\n+                    <Input value={cep.uf} {...register(\"Uf\")} />        \r\n+                </Container>\r\n+                <Container>\r\n+                    <Label>Rua</Label>\r\n+                    <Input value={cep.logradouro} {...register(\"Rua\")} />            \r\n+                </Container>\r\n+                <Container>\r\n+                    <Label>Bairro</Label>\r\n+                    <Input value={cep.bairro} {...register(\"Bairro\")} />            \r\n+                </Container>\r\n+                <Container>\r\n                     <Label>Senha</Label>\r\n-                    <Input type='password' {...register(\"password\")} />\r\n+                    <Input type='password'  {...register(\"password\")} />\r\n                     <Error>{errors.password?.message}</Error>\r\n                 </Container>\r\n                 <Container>\r\n                     <Label>Confirmar Senha</Label>\r\n"
                }
            ],
            "date": 1629917712097,
            "name": "Commit-0",
            "content": "import React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\nimport { schema } from './Schema'\r\n\r\nimport { Button, Container, Form, Input, Label, Section, Title } from './styles';\r\n\r\nfunction Former() {\r\n    const { register, handleSubmit, formState: { errors } } = useForm({\r\n        resolver: yupResolver(schema)\r\n    });\r\n    const newUser = (user) => console.log(user);\r\n    return (\r\n        <Section>\r\n            <Form onSubmit={handleSubmit(newUser)}>\r\n                <Title>Formulário de Cadastro</Title>\r\n                <Container>\r\n                    <Label>Nome</Label>\r\n                    <Input type='text' {...register(\"name\")} />\r\n                    <p>{errors.name?.message}</p>\r\n                </Container>\r\n                <Container>\r\n                    <Label>Sobrenome</Label>\r\n                    <Input type='text' {...register(\"lastname\")} />\r\n                    <p>{errors.lastname?.message}</p>\r\n                </Container>\r\n                <Container>\r\n                    <Label>E-mail</Label>\r\n                    <Input type='email' {...register(\"email\")} />\r\n                    <p>{errors.email?.message}</p>\r\n                </Container>\r\n                <Container>\r\n                    <Label>Senha</Label>\r\n                    <Input type='password' {...register(\"password\")} />\r\n                    <p>{errors.password?.message}</p>\r\n                </Container>\r\n                <Container>\r\n                    <Label>Confirmar Senha</Label>\r\n                    <Input type='password' {...register(\"confirmPassword\")} />\r\n                    <p>{errors.confirmPassword?.message}</p>\r\n                </Container>\r\n                <Button type='submit'>Enviar</Button>\r\n            </Form>\r\n        </Section>\r\n    );\r\n}\r\n\r\nexport default Former;"
        }
    ]
}